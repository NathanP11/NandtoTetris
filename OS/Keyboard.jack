// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
	
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		//var char myChar;
		//let myChar = Memory.poke(24576);
		
		return Memory.poke(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var boolean myBool;
		var char c, d;
		
		let myBool = true;
		
		while(myBool){
			let c = Keyboard.keyPressed();
			if( ~(c=0) ){
				let myBool = false;
			}
		}
		let myBool = true; 
		
		while(myBool){
			let d = Keyboard.keyPressed();
			if( (d=0) ){
				let myBool = false;
			}
		}
		
		do Output.printChar(c);
		
		return 0;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String s;
		var char c;
		var boolean myBool;
		
		let myBool = true;
		let s = String.new(63);
		
		while(myBool){
			let c = Keyboard.readChar();
			if( (c=128) ){ //new line
				do Output.println();
				return s;
			}
			else{
				if( (c=129) ){ //backspace
					do s.eraseLastChar();
					do Output.println();
				}
				else{
					let s = s.appendChar(c);
				}
			}
		}
		
		return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var String s;
		var char c;
		var boolean myBool;
		var int myInt;
		
		let myBool = true;
		let s = String.new(63);
		
		while(myBool){
			let c = Keyboard.readChar();
			if( (c=128) ){ //new line
				do Output.println();
				let myBool = false;
			}
			else{
				if( (c=129) ){ //backspace
					do s.eraseLastChar();
					do Output.println();
				}
				else{
					if( (c < 48) | (c > 57) ){
						if( c = 45 ){
							let s = s.appendChar(c);
						}
						else{
							let myBool = false;
						}
					}
					else{
						let s = s.appendChar(c);
					}
				}
			}
		}
		
		let myInt = s.intValue();
		
		
		return myInt;
    }
}
